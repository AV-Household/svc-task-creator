// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TaskCreator.Specs.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class РедактированиеЗадачи_Feature : object, Xunit.IClassFixture<РедактированиеЗадачи_Feature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "EditTask.feature"
#line hidden
        
        public РедактированиеЗадачи_Feature(РедактированиеЗадачи_Feature.FixtureData fixtureData, TaskCreator_Specs_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Редактирование задачи.", "Взрослый может редактировать задачу. Ребенок не может редактировать задачу.\r\nДля " +
                    "успешного редактирования задачи новый текст не должен быть пустой строкой.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Взрослый может редактировать текст задачи")]
        [Xunit.TraitAttribute("FeatureTitle", "Редактирование задачи.")]
        [Xunit.TraitAttribute("Description", "Взрослый может редактировать текст задачи")]
        public virtual void ВзрослыйМожетРедактироватьТекстЗадачи()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Взрослый может редактировать текст задачи", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Phone",
                            "Name",
                            "Adult"});
                table25.AddRow(new string[] {
                            "father@family.com",
                            "+79180000001",
                            "Папа",
                            "да"});
                table25.AddRow(new string[] {
                            "son@family.com",
                            "+79180000002",
                            "Сын",
                            "нет"});
#line 6
        testRunner.Given("семья из", ((string)(null)), table25, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskID",
                            "Text",
                            "IsCompleted",
                            "DateDeadline"});
                table26.AddRow(new string[] {
                            "8eaf664a-d074-4f9b-9369-8f9e6f0e096a",
                            "Я текст задачи",
                            "false",
                            "30.03.2023"});
                table26.AddRow(new string[] {
                            "4a592327-edc1-4dc6-b1f8-459b65e37a73",
                            "Вторая задача",
                            "true",
                            "31.03.2023"});
#line 10
        testRunner.And("список задач из", ((string)(null)), table26, "And ");
#line hidden
#line 14
        testRunner.And("в систему вошел Папа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
        testRunner.When("пользователь редактирует задачу под номером 8eaf664a-d074-4f9b-9369-8f9e6f0e096a " +
                        "c новым текстом \"Новый текст задачи\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 16
        testRunner.And("пользователь получает список задач", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
        testRunner.Then("количество элементов в списке задач 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
        testRunner.And("в списке задач есть задача с текстом \"Новый текст задачи\" под номером 8eaf664a-d0" +
                        "74-4f9b-9369-8f9e6f0e096a", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
        testRunner.And("в списке задач есть задача с текстом \"Вторая задача\" под номером 4a592327-edc1-4d" +
                        "c6-b1f8-459b65e37a73", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Ребенок не может редактировать текст задачи")]
        [Xunit.TraitAttribute("FeatureTitle", "Редактирование задачи.")]
        [Xunit.TraitAttribute("Description", "Ребенок не может редактировать текст задачи")]
        public virtual void РебенокНеМожетРедактироватьТекстЗадачи()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ребенок не может редактировать текст задачи", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 21
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Phone",
                            "Name",
                            "Adult"});
                table27.AddRow(new string[] {
                            "father@family.com",
                            "+79180000001",
                            "Папа",
                            "да"});
                table27.AddRow(new string[] {
                            "son@family.com",
                            "+79180000002",
                            "Сын",
                            "нет"});
#line 22
        testRunner.Given("семья из", ((string)(null)), table27, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskID",
                            "Text",
                            "IsCompleted",
                            "DateDeadline"});
                table28.AddRow(new string[] {
                            "8eaf664a-d074-4f9b-9369-8f9e6f0e096a",
                            "Я текст задачи",
                            "false",
                            "30.03.2023"});
                table28.AddRow(new string[] {
                            "4a592327-edc1-4dc6-b1f8-459b65e37a73",
                            "Вторая задача",
                            "true",
                            "31.03.2023"});
#line 26
        testRunner.And("список задач из", ((string)(null)), table28, "And ");
#line hidden
#line 30
        testRunner.And("в систему вошел Сын", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
        testRunner.When("пользователь редактирует задачу под номером 8eaf664a-d074-4f9b-9369-8f9e6f0e096a " +
                        "c новым текстом \"Новый текст задачи\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 32
        testRunner.And("пользователь получает список задач", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
        testRunner.Then("количество элементов в списке задач 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 34
        testRunner.And("в списке задач есть задача с текстом \"Я текст задачи\" под номером 8eaf664a-d074-4" +
                        "f9b-9369-8f9e6f0e096a", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
        testRunner.And("в списке задач есть задача с текстом \"Вторая задача\" под номером 4a592327-edc1-4d" +
                        "c6-b1f8-459b65e37a73", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Взрослый не может присвоить задаче пустой текст")]
        [Xunit.TraitAttribute("FeatureTitle", "Редактирование задачи.")]
        [Xunit.TraitAttribute("Description", "Взрослый не может присвоить задаче пустой текст")]
        public virtual void ВзрослыйНеМожетПрисвоитьЗадачеПустойТекст()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Взрослый не может присвоить задаче пустой текст", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 37
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Phone",
                            "Name",
                            "Adult"});
                table29.AddRow(new string[] {
                            "father@family.com",
                            "+79180000001",
                            "Папа",
                            "да"});
                table29.AddRow(new string[] {
                            "son@family.com",
                            "+79180000002",
                            "Сын",
                            "нет"});
#line 38
        testRunner.Given("семья из", ((string)(null)), table29, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskID",
                            "Text",
                            "IsCompleted",
                            "DateDeadline"});
                table30.AddRow(new string[] {
                            "8eaf664a-d074-4f9b-9369-8f9e6f0e096a",
                            "Я текст задачи",
                            "false",
                            "30.03.2023"});
                table30.AddRow(new string[] {
                            "4a592327-edc1-4dc6-b1f8-459b65e37a73",
                            "Вторая задача",
                            "true",
                            "31.03.2023"});
#line 42
        testRunner.And("список задач из", ((string)(null)), table30, "And ");
#line hidden
#line 46
        testRunner.And("в систему вошел Папа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
        testRunner.When("пользователь редактирует задачу под номером 8eaf664a-d074-4f9b-9369-8f9e6f0e096a " +
                        "c новым текстом \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 48
        testRunner.And("пользователь получает список задач", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
        testRunner.Then("количество элементов в списке задач 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
        testRunner.And("в списке задач есть задача с текстом \"Я текст задачи\" под номером 8eaf664a-d074-4" +
                        "f9b-9369-8f9e6f0e096a", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
        testRunner.And("в списке задач есть задача с текстом \"Вторая задача\" под номером 4a592327-edc1-4d" +
                        "c6-b1f8-459b65e37a73", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                РедактированиеЗадачи_Feature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                РедактированиеЗадачи_Feature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
